version: 0.2
env:
  secrets-manager:
    LOGIN: prod/sonar:sonartoken
    HOST: prod/sonar:HOST
    Organization: prod/sonar:Organization
    Project: prod/sonar:Project
phases:
  install:
    runtime-versions:
      java: corretto11
  pre_build:
    commands:
      - apt-get update
      - apt-get install -y jq
      - export SONAR_SCANNER_VERSION=4.4.0.2170
      - export SONAR_SCANNER_HOME=$HOME/.sonar/sonar-scanner-$SONAR_SCANNER_VERSION-linux
      - curl --create-dirs -sSLo $HOME/.sonar/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONAR_SCANNER_VERSION-linux.zip
      - unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
      - export PATH=$SONAR_SCANNER_HOME/bin:$PATH
      - export SONAR_SCANNER_OPTS="-server"

  build:      
    commands:
      - echo inicia Fase Build  ...
      - echo inicia mvn test...
      - mvn test     
      - mvn sonar:sonar -Dsonar.login=$LOGIN -Dsonar.host.url=$HOST -Dsonar.projectKey=$Project -Dsonar.organization=$Organization
      - sleep 5
      - curl https://sonarcloud.io/api/qualitygates/project_status?projectKey=$PROJECTKEY > analysis.json
      - cat analysis.json
      - echo finaliza mvn test...
      - echo Creando paquete...
      - zip -r my-deployment-package.zip greengrasssdk/
      - zip -u my-deployment-package.zip lambda_function.py
      - Paquete creado Satisfactoriamente
      - echo Desplegando lambda ...
      - aws lambda update-function-code --function-name labIoTGreengrassLambda --zip-file fileb://my-deployment-package.zip
      - echo Lambda desplegada con exito
      - echo fin Build.
