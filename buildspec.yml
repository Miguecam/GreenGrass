version: 0.2
env:
  secrets-manager:
    LOGIN: prod/sonar:sonartoken
    HOST: prod/sonar:HOST
    Organization: prod/sonar:Organization
    Project: prod/sonar:Project
phases:
  install:
    runtime-versions:
      java: corretto11
  pre_build:
    commands:
      - apt-get update
      - apt-get install -y jq
      - wget http://www-eu.apache.org/dist/maven/maven-3/3.8.3/binaries/apache-maven-3.8.3-bin.tar.gz
      - tar xzf apache-maven-3.8.3-bin.tar.gz
      - ln -s apache-maven-3.8.3 maven
      - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.3.0.1492-linux.zip
      - unzip ./sonar-scanner-cli-3.3.0.1492-linux.zip
      - export PATH=$PATH:/sonar-scanner-3.3.0.1492-linux/bin/
  build:
    commands:
      - mvn clean deploy
      - mvn clean dependency:copy-dependencies package
      - mvn test     
      - mvn -X,--debug sonar:sonar -Dsonar.login=$LOGIN -Dsonar.host.url=$HOST -Dsonar.projectKey=$Project -Dsonar.organization=$Organization
        - sleep 5
      - curl https://sonarcloud.io/api/qualitygates/project_status?projectKey=$PROJECTKEY > analysis.json
      - cat analysis.json
      - echo Creando paquete...
      - zip -r my-deployment-package.zip greengrasssdk/
      - zip -u my-deployment-package.zip lambda_function.py
      - Paquete creado Satisfactoriamente
      - echo Desplegando lambda ...
      - aws lambda update-function-code --function-name labIoTGreengrassLambda --zip-file fileb://my-deployment-package.zip
      - echo Lambda desplegada con exito
      - echo fin Build.
